(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{308:function(a,e,s){a.exports=s.p+"assets/img/podinfo.d8c508a4.png"},327:function(a,e,s){"use strict";s.r(e);var t=s(8),n=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"build-and-run-container-image-using-knative-tekton"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#build-and-run-container-image-using-knative-tekton"}},[a._v("#")]),a._v(" Build and run container image using Knative + Tekton")]),a._v(" "),e("p",[a._v("Set the necessary variables:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GIT_REPOSITORY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"git@gitlab.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_DOMAIN}")]),a._v(':myuser/my-podinfo.git"')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GIT_REVISION")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"3.1.0"')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GIT_REPO_SSH_KEY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/id_rsa_gitlab"')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CONTAINER_REGISTRY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"harbor.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_DOMAIN}")]),a._v('/library/my-podinfo"')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CONTAINER_REGISTRY_USERNAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"robot\\'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$myrobot")]),a._v('"')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CONTAINER_REGISTRY_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${HARBOR_ROBOT_TOKEN}")]),a._v('"')]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GIT_PROJECT_NAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("GIT_REPOSITORY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s@.*/\\(.*\\).git@'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[a._v("\\1")]),a._v('@; s/\\./\\-/"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CONTAINER_REGISTRY_SERVER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" $CONTAINER_REGISTRY "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v(" / "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{ print \\'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),a._v(' }"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CONTAINER_REGISTRY_SERVER_MODIFIED")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" $CONTAINER_REGISTRY "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v(" / "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{ gsub(/\\./,'),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("-"),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("); print \\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),a._v(' }"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GIT_SSH_SERVER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" $GIT_REPOSITORY "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[@:]"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{ print \\'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$2")]),a._v('}"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GIT_SSH_SERVER_MODIFIED")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" $GIT_REPOSITORY "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[@:]"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{ gsub(/\\./,'),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("-"),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("); print \\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$2")]),a._v(' }"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),e("p",[a._v("Create secret for Harbor registry to let Tekton pipeline to upload the container\nimage:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("kubectl create secret docker-registry "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CONTAINER_REGISTRY_SERVER_MODIFIED}")]),a._v("-docker-config "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --docker-server"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CONTAINER_REGISTRY_SERVER}")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --docker-username"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CONTAINER_REGISTRY_USERNAME}")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --docker-password"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CONTAINER_REGISTRY_PASSWORD}")]),a._v('"')]),a._v("\n")])])]),e("p",[a._v("Create secret for AWS user to allow Tekton pipeline to push binary to S3:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("kubectl create secret generic user-aws-access-keys --from-literal"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("access_key"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$USER_AWS_ACCESS_KEY_ID")]),a._v(" --from-literal"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("secret_key"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$USER_AWS_SECRET_ACCESS_KEY")]),a._v("\n")])])]),e("p",[a._v("Create + start Tekton pipeline (and it's components) to build the container\nimage:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF"),e("span",{pre:!0,attrs:{class:"token bash punctuation"}},[a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" -")]),a._v("\napiVersion: v1\nkind: Secret\ntype: kubernetes.io/ssh-auth\nmetadata:\n  name: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_SSH_SERVER_MODIFIED}")]),a._v("-ssh-key\n  annotations:\n    tekton.dev/git-0: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_SSH_SERVER}")]),a._v("\ndata:\n  ssh-privatekey: "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("base64 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("GIT_REPO_SSH_KEY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_SSH_SERVER_MODIFIED}")]),a._v("-build-bot\nsecrets:\n  - name: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_SSH_SERVER_MODIFIED}")]),a._v("-ssh-key\n---\napiVersion: tekton.dev/v1alpha1\nkind: PipelineResource\nmetadata:\n  name: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_PROJECT_NAME}")]),a._v("-project-git\n  namespace: default\nspec:\n  type: git\n  params:\n    - name: url\n      value: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_REPOSITORY}")]),a._v("\n    - name: revision\n      value: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_REVISION}")]),a._v("\n---\napiVersion: tekton.dev/v1alpha1\nkind: PipelineResource\nmetadata:\n  name: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_PROJECT_NAME}")]),a._v("-project-image\nspec:\n  type: image\n  params:\n    - name: url\n      value: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CONTAINER_REGISTRY}")]),a._v(":"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_REVISION}")]),a._v("\n---\napiVersion: tekton.dev/v1alpha1\nkind: Task\nmetadata:\n  name: build-docker-image-from-git-task\nspec:\n  inputs:\n    resources:\n      - name: docker-source\n        type: git\n    params:\n      - name: pathToDockerFile\n        description: The path to the dockerfile to build\n        default: /workspace/docker-source/Dockerfile\n      - name: pathToContext\n        description:\n          The build context used by Kaniko\n          (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)\n        default: /workspace/docker-source\n  outputs:\n    resources:\n      - name: builtImage\n        type: image\n  volumes:\n    - name: docker-config\n      secret:\n        secretName: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CONTAINER_REGISTRY_SERVER_MODIFIED}")]),a._v("-docker-config\n        items:\n          - key: .dockerconfigjson\n            path: config.json\n    - name: shared-storage\n      emptyDir: {}\n  steps:\n    - name: build-and-tar\n      image: gcr.io/kaniko-project/executor\n      command:\n        - /kaniko/executor\n      args:\n        - --dockerfile=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("inputs.params.pathToDockerFile"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n        - --destination=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("outputs.resources.builtImage.url"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n        - --context=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("inputs.params.pathToContext"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n        - --single-snapshot\n        - --tarPath=/shared-storage/"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v("}")]),a._v('-app-build.tar\n        - --no-push\n      volumeMounts:\n        - name: docker-config\n          mountPath: /builder/home/.docker/\n        - name: shared-storage\n          mountPath: /shared-storage\n    - name: upload-container-content-s3\n      image: atlassian/pipelines-awscli\n      command: ["sh", "-x", "-c", "ls -la /shared-storage/ ; aws s3 cp /shared-storage/'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v("}")]),a._v("-app-build.tar s3://"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v("}")]),a._v('-kops-k8s/"]\n      env:\n        - name: AWS_DEFAULT_REGION\n          value: "eu-central-1"\n        - name: AWS_ACCESS_KEY_ID\n          valueFrom:\n            secretKeyRef:\n              name: user-aws-access-keys\n              key: access_key\n        - name: AWS_SECRET_ACCESS_KEY\n          valueFrom:\n            secretKeyRef:\n              name: user-aws-access-keys\n              key: secret_key\n      volumeMounts:\n        - name: shared-storage\n          mountPath: /shared-storage\n    - name: build-and-push\n      image: gcr.io/kaniko-project/executor\n      env:\n        - name: "DOCKER_CONFIG"\n          value: "/builder/home/.docker/"\n      command:\n        - /kaniko/executor\n      args:\n        - --dockerfile=\\'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("inputs.params.pathToDockerFile"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n        - --destination=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("outputs.resources.builtImage.url"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n        - --context=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("inputs.params.pathToContext"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n        - --single-snapshot\n        - --skip-tls-verify\n      volumeMounts:\n        - name: docker-config\n          mountPath: /builder/home/.docker/\n---\napiVersion: tekton.dev/v1alpha1\nkind: Pipeline\nmetadata:\n  name: build-docker-image-from-git-pipeline\nspec:\n  resources:\n  - name: docker-source\n    type: git\n  - name: builtImage\n    type: image\n  tasks:\n  - name: build-docker-image-from-git-task-run\n    taskRef:\n      name: build-docker-image-from-git-task\n    params:\n    - name: pathToDockerFile\n      value: Dockerfile\n    - name: pathToContext\n      value: /workspace/docker-source/\n    resources:\n      inputs:\n      - name: docker-source\n        resource: docker-source\n      outputs:\n      - name: builtImage\n        resource: builtImage\n---\napiVersion: tekton.dev/v1alpha1\nkind: PipelineRun\nmetadata:\n  name: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_PROJECT_NAME}")]),a._v("-build-docker-image-from-git-pipelinerun\nspec:\n  serviceAccount: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_SSH_SERVER_MODIFIED}")]),a._v("-build-bot\n  pipelineRef:\n    name: build-docker-image-from-git-pipeline\n  resources:\n    - name: docker-source\n      resourceRef:\n        name: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_PROJECT_NAME}")]),a._v("-project-git\n    - name: builtImage\n      resourceRef:\n        name: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_PROJECT_NAME}")]),a._v("-project-image\nEOF")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\n")])])]),e("p",[a._v("Wait for container build process will complete:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("kubectl "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("wait")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--timeout")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("10m "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--for")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("condition"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Succeeded pipelineruns/"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_PROJECT_NAME}")]),a._v("-build-docker-image-from-git-pipelinerun\n")])])]),e("p",[a._v("Output:")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("pipelinerun.tekton.dev/my-podinfo-build-docker-image-from-git-pipelinerun condition met\n")])])]),e("p",[a._v("Start the application:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF"),e("span",{pre:!0,attrs:{class:"token bash punctuation"}},[a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" -")]),a._v("\napiVersion: serving.knative.dev/v1alpha1\nkind: Service\nmetadata:\n  name: my-podinfo\n  namespace: default\nspec:\n  template:\n    spec:\n      containers:\n        - image: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CONTAINER_REGISTRY}")]),a._v(":"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GIT_REVISION}")]),a._v("\n          ports:\n          - name: http1\n            containerPort: 9898\nEOF")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v("\n")])])]),e("p",[a._v("Check the status of the application:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("kubectl get pod,ksvc,configuration,revision,route,deployment\n")])])]),e("p",[a._v("Output:")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("NAME                                                                             READY   STATUS      RESTARTS   AGE\npod/my-podinfo-build-docker-image-from-git-pipelinerun-build--msbcv-pod-d6861e   0/6     Completed   0          7m56s\npod/my-podinfo-vpw78-deployment-bbb89db58-vmnhb                                  2/2     Running     0          21s\n\nNAME                                     URL                                    LATESTCREATED      LATESTREADY        READY   REASON\nservice.serving.knative.dev/my-podinfo   http://my-podinfo.default.mylabs.dev   my-podinfo-vpw78   my-podinfo-vpw78   True\n\nNAME                                           LATESTCREATED      LATESTREADY        READY   REASON\nconfiguration.serving.knative.dev/my-podinfo   my-podinfo-vpw78   my-podinfo-vpw78   True\n\nNAME                                            CONFIG NAME   K8S SERVICE NAME   GENERATION   READY   REASON\nrevision.serving.knative.dev/my-podinfo-vpw78   my-podinfo    my-podinfo-vpw78   1            True\n\nNAME                                   URL                                    READY   REASON\nroute.serving.knative.dev/my-podinfo   http://my-podinfo.default.mylabs.dev   True\n\nNAME                                                READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.extensions/my-podinfo-vpw78-deployment   1/1     1            1           21s\n")])])]),e("p",[a._v("Open "),e("a",{attrs:{href:"https://my-podinfo.default.mylabs.dev",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://my-podinfo.default.mylabs.dev"),e("OutboundLink")],1),a._v("\nto see the application:")]),a._v(" "),e("p",[a._v("When you close the web browser - after some time without handling traffic\nthe number of running pods should drop to zero:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("kubectl get deployments,pods\n")])])]),e("p",[a._v("Output:")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("NAME                                                READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.extensions/my-podinfo-vpw78-deployment   1/1     1            1           22s\n\nNAME                                                                             READY   STATUS      RESTARTS   AGE\npod/my-podinfo-build-docker-image-from-git-pipelinerun-build--msbcv-pod-d6861e   0/6     Completed   0          7m57s\npod/my-podinfo-vpw78-deployment-bbb89db58-vmnhb                                  2/2     Running     0          22s\n")])])]),e("p",[a._v("If you open the URL again the pod should be started again and application will\nhandle the traffic - this takes about 3 seconds.")]),a._v(" "),e("p",[a._v("You can try to open the web browser with the URL "),e("a",{attrs:{href:"https://my-podinfo.default.mylabs.dev",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://my-podinfo.default.mylabs.dev"),e("OutboundLink")],1),a._v("\nagain and test it.")]),a._v(" "),e("p",[e("img",{attrs:{src:s(308),alt:"podinfo",title:"podinfo"}})])])}),[],!1,null,null,null);e.default=n.exports}}]);