(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{305:function(t,a,s){t.exports=s.p+"assets/img/GitLab.dd7e0dbb.png"},325:function(t,a,s){"use strict";s.r(a);var e=s(8),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"install-gitlab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-gitlab"}},[t._v("#")]),t._v(" Install GitLab")]),t._v(" "),a("p",[t._v("Add GitLab repository:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("helm repo "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" gitlab https://charts.gitlab.io/\nhelm repo update\n")])])]),a("p",[t._v("Create "),a("code",[t._v("gitlab")]),t._v(" namespaces with secrets needed for GitLab\n(certificates and passwords):")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("kubectl create namespace gitlab\nkubectl create secret generic gitlab-initial-root-password --from-literal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin123"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" gitlab\nkubectl create secret generic custom-ca --from-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("unique_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tmp/fakelerootx1.pem "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" gitlab\n")])])]),a("p",[t._v('Create Istio Gateways and VirtualServices to allow accessing GitLab from\n"outside":')]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),a("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" kubectl apply "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" -")]),t._v("\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: gitlab-gateway\n  namespace: gitlab\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 22\n      name: ssh-gitlab\n      protocol: TCP\n    hosts:\n    - gitlab."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n  - port:\n      number: 80\n      name: http-gitlab\n      protocol: HTTP\n    hosts:\n    - gitlab."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n    - minio."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n    tls:\n      httpsRedirect: true\n  - port:\n      number: 443\n      name: https-gitlab\n      protocol: HTTPS\n    hosts:\n    - gitlab."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n    - minio."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n    tls:\n      credentialName: ingress-cert-"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LETSENCRYPT_ENVIRONMENT}")]),t._v("\n      mode: SIMPLE\n      privateKey: sds\n      serverCertificate: sds\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: gitlab-ssh-virtual-service\n  namespace: gitlab\nspec:\n  hosts:\n  - gitlab."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n  gateways:\n  - gitlab-gateway\n  tcp:\n  - match:\n    - port: 22\n    route:\n    - destination:\n        host: gitlab-gitlab-shell.gitlab.svc.cluster.local\n        port:\n          number: 22\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: gitlab-http-virtual-service\n  namespace: gitlab\nspec:\n  hosts:\n  - gitlab."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n  gateways:\n  - gitlab-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /admin/sidekiq\n    route:\n    - destination:\n        host: gitlab-unicorn.gitlab.svc.cluster.local\n        port:\n          number: 8080\n  - route:\n    - destination:\n        host: gitlab-unicorn.gitlab.svc.cluster.local\n        port:\n          number: 8181\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: gitlab-minio-virtual-service\n  namespace: gitlab\nspec:\n  hosts:\n  - minio."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n  gateways:\n  - gitlab-gateway\n  http:\n  - route:\n    - destination:\n        host: gitlab-minio-svc.gitlab.svc.cluster.local\n        port:\n          number: 9000\nEOF")]),t._v("\n")])])]),a("p",[t._v("Install GitLab using Helm:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("helm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gitlab gitlab/gitlab "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--namespace")]),t._v(" gitlab "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--wait")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.6")]),t._v(".0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("certmanager.install")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" gitlab-runner.install"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("gitlab.gitaly.persistence.size")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1Gi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("gitlab.unicorn.ingress.enabled")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.appConfig.cron_jobs.ci_archive_traces_cron_worker.cron")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"17 * * * *"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.appConfig.cron_jobs.expire_build_artifacts_worker.cron")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"50 * * * *"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.appConfig.cron_jobs.pipeline_schedule_worker.cron")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"19 * * * *"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.appConfig.cron_jobs.repository_archive_cache_worker.cron")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0 * * * *"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.appConfig.cron_jobs.repository_check_worker.cron")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20 * * * *"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.appConfig.cron_jobs.stuck_ci_jobs_worker.cron")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0 * * * *"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.appConfig.gravatar.plainUrl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.gravatar.com/avatar/%{hash}?s=%{size}&d=identicon"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.appConfig.gravatar.sslUrl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://secure.gravatar.com/avatar/%{hash}?s=%{size}&d=identicon"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" global.certificates.customCAs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".secret"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("custom-ca "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.edition")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ce "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.hosts.domain")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.ingress.configureCertmanager")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.ingress.enabled")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.initialRootPassword.secret")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("gitlab-initial-root-password "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("minio.persistence.size")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("5Gi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" nginx-ingress.enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("postgresql.persistence.size")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1Gi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("prometheus.install")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("redis.persistence.size")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1Gi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("registry.enabled")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("NAME: gitlab\nLAST DEPLOYED: Fri Dec 27 10:57:01 2019\nNAMESPACE: gitlab\nSTATUS: deployed\nREVISION: 1\nNOTES:\nWARNING: Automatic TLS certificate generation with cert-manager is disabled and no TLS certificates were provided. Self-signed certificates were generated.\n\nYou may retrieve the CA root for these certificates from the `gitlab-wildcard-tls-ca` secret, via the following command. It can then be imported to a web browser or system store.\n\n    kubectl get secret gitlab-wildcard-tls-ca -ojsonpath='{.data.cfssl_ca}' | base64 --decode > gitlab.mylabs.dev.ca.pem\n\nIf you do not wish to use self-signed certificates, please set the following properties:\n  - global.ingress.tls.secretName\n  OR\n  - gitlab.unicorn.ingress.tls.secretName\n  - minio.ingress.tls.secretName\n")])])]),a("p",[t._v("Try to access the GitLab using the URL "),a("a",{attrs:{href:"https://gitlab.mylabs.dev",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitlab.mylabs.dev"),a("OutboundLink")],1),t._v("\nwith following credentials:")]),t._v(" "),a("ul",[a("li",[t._v("Username: "),a("code",[t._v("root")])]),t._v(" "),a("li",[t._v("Password: "),a("code",[t._v("admin123")])])]),t._v(" "),a("p",[t._v("Create Personal Access Token "),a("code",[t._v("1234567890")]),t._v(" for user "),a("code",[t._v("root")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("UNICORN_POD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("kubectl get pods "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" gitlab "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-l")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("app"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("unicorn "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("jsonpath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{.items[0].metadata.name}"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${UNICORN_POD}")]),t._v("\nkubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" gitlab "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$UNICORN_POD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" unicorn -- /bin/bash "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\ncd /srv/gitlab;\nbin/rails r '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("\ntoken_digest = Gitlab::CryptoHelper.sha256 "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("1234567890"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(";\ntoken=PersonalAccessToken.create!(name: "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("Full Access"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(", scopes: [:api], user: User.where(id: 1).first, token_digest: token_digest);\ntoken.save!\n"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(';\n"')]),t._v("\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("gitlab-unicorn-566c465dc4-4dwdz\n")])])]),a("p",[t._v("Create new user "),a("code",[t._v("myuser")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GITLAB_USER_ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-k")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" POST "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-type: application/json"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PRIVATE-TOKEN: 1234567890"')]),t._v(" https://gitlab.$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("MY_DOMAIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/api/v4/users "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{\n  '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("name"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("myuser"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("username"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("myuser"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("password"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("myuser_password"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("email"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("myuser@"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("skip_confirmation"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(': true\n}"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".id"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GITLAB_USER_ID}")]),t._v("\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("2\n")])])]),a("p",[t._v("Create a personal access token for user "),a("code",[t._v("myuser")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("kubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" gitlab "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$UNICORN_POD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" unicorn -- /bin/bash "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\ncd /srv/gitlab;\nbin/rails r '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("\ntoken_digest = Gitlab::CryptoHelper.sha256 "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("0987654321"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(";\ntoken=PersonalAccessToken.create!(name: "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("Full Access"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(", scopes: [:api], user: User.where(id: "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GITLAB_USER_ID}")]),t._v(").first, token_digest: token_digest);\ntoken.save!\n"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(';\n"')]),t._v("\n")])])]),a("p",[t._v("Create Impersonation token for "),a("code",[t._v("myuser")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GILAB_MYUSER_TOKEN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-k")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" POST "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-type: application/json"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PRIVATE-TOKEN: 1234567890"')]),t._v(" https://gitlab.$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("MY_DOMAIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/api/v4/users/$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("GITLAB_USER_ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/impersonation_tokens "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{\n  '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("name"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("mytoken"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("scopes"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": ["),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("api"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(']\n}"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".token"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GILAB_MYUSER_TOKEN}")]),t._v("\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("t_dJwRNpVkdsxWzs3Yv3\n")])])]),a("p",[t._v("Create SSH key which will be imported to GitLab:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" ed25519 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" tmp/id_rsa_gitlab "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-q")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-N")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-C")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_ssh_key@mylabs.dev"')]),t._v("\n")])])]),a("p",[t._v("Add ssh key to the "),a("code",[t._v("myuser")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-sk")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" POST "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-F")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"private_token='),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GILAB_MYUSER_TOKEN}")]),t._v('"')]),t._v(" https://gitlab."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("/api/v4/user/keys "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-F")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title=my_ssh_key"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-F")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key='),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" tmp/id_rsa_gitlab.pub"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_ssh_key"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKH2+gqsWrziaAmzGumc/frT0EBMSrXSP0MT/jRcKwtm my_ssh_key@mylabs.dev"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"created_at"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-12-27T10:01:45.403Z"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Create new project:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PROJECT_ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-k")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" POST "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-type: application/json"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PRIVATE-TOKEN: 1234567890"')]),t._v(" https://gitlab.$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("MY_DOMAIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/api/v4/projects/user/$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("GITLAB_USER_ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{\n  '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("user_id"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GITLAB_USER_ID}")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("name"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("my-podinfo"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("description"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("My Test Project"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("wiki_access_level"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("disabled"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("issues_access_level"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("disabled"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("builds_access_level"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("disabled"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("snippets_access_level"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("disabled"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("container-registry-enabled"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": false,\n  "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("visibility"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("public"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('\n}"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".id"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PROJECT_ID}")]),t._v("\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1\n")])])]),a("p",[t._v("Clone the "),a("a",{attrs:{href:"https://github.com/stefanprodan/podinfo",target:"_blank",rel:"noopener noreferrer"}},[t._v("podinfo"),a("OutboundLink")],1),t._v(" project and push\nit to the newly created git repository "),a("code",[t._v("my-podinfo")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GIT_SSH_COMMAND")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ssh -i '),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PWD")]),t._v('/tmp/id_rsa_gitlab -o UserKnownHostsFile=/dev/null"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--bare")]),t._v(" https://github.com/stefanprodan/podinfo tmp/podinfo\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-C")]),t._v(" tmp/podinfo push "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--mirror")]),t._v(" git@gitlab."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v(":myuser/my-podinfo.git\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" tmp/podinfo\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("loning into bare repository 'tmp/podinfo'...\nremote: Enumerating objects: 10, done.\nremote: Counting objects: 100% (10/10), done.\nremote: Compressing objects: 100% (10/10), done.\nremote: Total 5266 (delta 0), reused 3 (delta 0), pack-reused 5256\nReceiving objects: 100% (5266/5266), 9.52 MiB | 1.28 MiB/s, done.\nResolving deltas: 100% (2342/2342), done.\nWarning: Permanently added 'gitlab.mylabs.dev,18.184.227.16' (ECDSA) to the list of known hosts.\nEnumerating objects: 5266, done.\nCounting objects: 100% (5266/5266), done.\nDelta compression using up to 4 threads\nCompressing objects: 100% (2544/2544), done.\nWriting objects: 100% (5266/5266), 9.52 MiB | 6.95 MiB/s, done.\nTotal 5266 (delta 2342), reused 5266 (delta 2342)\nremote: Resolving deltas: 100% (2342/2342), done.\nremote:\nremote: To create a merge request for gh-pages, visit:\nremote:   https://gitlab.mylabs.dev/myuser/my-podinfo/merge_requests/new?merge_request%5Bsource_branch%5D=gh-pages\nremote:\nremote: To create a merge request for v0.x, visit:\nremote:   https://gitlab.mylabs.dev/myuser/my-podinfo/merge_requests/new?merge_request%5Bsource_branch%5D=v0.x\nremote:\nremote: To create a merge request for v1.x, visit:\nremote:   https://gitlab.mylabs.dev/myuser/my-podinfo/merge_requests/new?merge_request%5Bsource_branch%5D=v1.x\nremote:\nremote: To create a merge request for v3.x, visit:\nremote:   https://gitlab.mylabs.dev/myuser/my-podinfo/merge_requests/new?merge_request%5Bsource_branch%5D=v3.x\nremote:\nTo gitlab.mylabs.dev:myuser/my-podinfo.git\n * [new branch]      gh-pages -> gh-pages\n * [new branch]      master -> master\n * [new branch]      v0.x -> v0.x\n * [new branch]      v1.x -> v1.x\n * [new branch]      v3.x -> v3.x\n * [new tag]         0.2.2 -> 0.2.2\n * [new tag]         2.0.0 -> 2.0.0\n * [new tag]         2.0.1 -> 2.0.1\n * [new tag]         2.0.2 -> 2.0.2\n * [new tag]         2.1.0 -> 2.1.0\n * [new tag]         2.1.1 -> 2.1.1\n * [new tag]         2.1.2 -> 2.1.2\n * [new tag]         2.1.3 -> 2.1.3\n * [new tag]         3.0.0 -> 3.0.0\n * [new tag]         3.1.0 -> 3.1.0\n * [new tag]         3.1.1 -> 3.1.1\n * [new tag]         3.1.2 -> 3.1.2\n * [new tag]         3.1.3 -> 3.1.3\n * [new tag]         3.1.4 -> 3.1.4\n * [new tag]         3.1.5 -> 3.1.5\n * [new tag]         flux-floral-pine-16 -> flux-floral-pine-16\n * [new tag]         flux-thawing-star-34 -> flux-thawing-star-34\n * [new tag]         v0.4.0 -> v0.4.0\n * [new tag]         v0.5.0 -> v0.5.0\n * [new tag]         v1.0.0 -> v1.0.0\n * [new tag]         v1.1.0 -> v1.1.0\n * [new tag]         v1.1.1 -> v1.1.1\n * [new tag]         v1.2.0 -> v1.2.0\n * [new tag]         v1.2.1 -> v1.2.1\n * [new tag]         v1.3.0 -> v1.3.0\n * [new tag]         v1.3.1 -> v1.3.1\n * [new tag]         v1.4.0 -> v1.4.0\n * [new tag]         v1.4.1 -> v1.4.1\n * [new tag]         v1.4.2 -> v1.4.2\n * [new tag]         v1.6.0 -> v1.6.0\n * [new tag]         v1.7.0 -> v1.7.0\n * [new tag]         v1.8.0 -> v1.8.0\n")])])]),a("p",[t._v("GitLab Screenshot:")]),t._v(" "),a("p",[a("img",{attrs:{src:s(305),alt:"GitLab",title:"GitLab"}})])])}),[],!1,null,null,null);a.default=n.exports}}]);